name: Build SnapFlow - All Platforms

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  # ═══════════════════════════════════════════════════════════
  # WINDOWS BUILD
  # ═══════════════════════════════════════════════════════════
  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller Pillow
      
      - name: Build Windows executable
        run: |
          pyinstaller --onefile `
            --windowed `
            --name "PhotoUploader" `
            --add-data "src;src" `
            --hidden-import="tkinter" `
            --hidden-import="dropbox" `
            --hidden-import="requests" `
            --hidden-import="cryptography" `
            --hidden-import="PIL" `
            --hidden-import="PIL.Image" `
            --hidden-import="PIL.ImageTk" `
            --hidden-import="PIL.ImageEnhance" `
            --icon="uploadericon.ico" `
            src/main.py
      
      - name: Create Windows installer (optional)
        run: |
          # You can add Inno Setup here for .exe installer
          echo "Windows build complete"
      
      - name: Upload Windows build
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: dist/PhotoUploader.exe

  # ═══════════════════════════════════════════════════════════
  # macOS UNIVERSAL BINARY (Intel + Apple Silicon)
  # ═══════════════════════════════════════════════════════════
  
  build-macos-intel:
    name: Build macOS (Intel)
    runs-on: macos-12  # Intel runner
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller Pillow
      
      - name: Build for Intel
        run: |
          pyinstaller --onefile \
            --windowed \
            --name "PhotoUploader" \
            --hidden-import=cryptography \
            --hidden-import=dropbox \
            --hidden-import=requests \
            --hidden-import=PIL \
            --hidden-import=PIL.Image \
            --hidden-import=PIL.ImageTk \
            --hidden-import=PIL.ImageEnhance \
            --osx-bundle-identifier "com.photouploader.app" \
            --icon uploadericon.png \
            src/main.py
      
      - name: Upload Intel binary
        uses: actions/upload-artifact@v3
        with:
          name: macos-intel
          path: dist/PhotoUploader.app/Contents/MacOS/PhotoUploader

  build-macos-arm:
    name: Build macOS (Apple Silicon)
    runs-on: macos-14  # Apple Silicon runner
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller Pillow
      
      - name: Build for ARM
        run: |
          pyinstaller --onefile \
            --windowed \
            --name "PhotoUploader" \
            --hidden-import=cryptography \
            --hidden-import=dropbox \
            --hidden-import=requests \
            --hidden-import=PIL \
            --hidden-import=PIL.Image \
            --hidden-import=PIL.ImageTk \
            --hidden-import=PIL.ImageEnhance \
            --osx-bundle-identifier "com.photouploader.app" \
            --icon uploadericon.png \
            src/main.py
      
      - name: Upload ARM binary
        uses: actions/upload-artifact@v3
        with:
          name: macos-arm
          path: dist/PhotoUploader.app/Contents/MacOS/PhotoUploader

  create-macos-universal:
    name: Create macOS Universal Binary
    needs: [build-macos-intel, build-macos-arm]
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download Intel build
        uses: actions/download-artifact@v3
        with:
          name: macos-intel
          path: intel
      
      - name: Download ARM build
        uses: actions/download-artifact@v3
        with:
          name: macos-arm
          path: arm
      
      - name: Create Universal Binary
        run: |
          chmod +x intel/PhotoUploader arm/PhotoUploader
          
          # Create universal binary
          lipo -create -output PhotoUploader_universal \
            intel/PhotoUploader \
            arm/PhotoUploader
          
          # Verify
          lipo -info PhotoUploader_universal
          
          # Create app bundle
          mkdir -p "PhotoUploader.app/Contents/MacOS"
          mkdir -p "PhotoUploader.app/Contents/Resources"
          
          cp PhotoUploader_universal "PhotoUploader.app/Contents/MacOS/PhotoUploader"
          chmod +x "PhotoUploader.app/Contents/MacOS/PhotoUploader"
          
          # Create Info.plist
          cat > PhotoUploader.app/Contents/Info.plist << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleExecutable</key>
              <string>PhotoUploader</string>
              <key>CFBundleIdentifier</key>
              <string>com.photouploader.app</string>
              <key>CFBundleName</key>
              <string>SnapFlow Uploader</string>
              <key>CFBundleDisplayName</key>
              <string>SnapFlow Uploader</string>
              <key>CFBundleVersion</key>
              <string>1.0.0</string>
              <key>CFBundleShortVersionString</key>
              <string>1.0.0</string>
              <key>LSMinimumSystemVersion</key>
              <string>10.13</string>
              <key>NSHighResolutionCapable</key>
              <true/>
          </dict>
          </plist>
          EOF
          
          # Copy icon
          if [ -f "uploadericon.png" ]; then
              cp uploadericon.png PhotoUploader.app/Contents/Resources/
          fi
          
          # Create DMG
          hdiutil create -volname "SnapFlow Uploader" \
            -srcfolder PhotoUploader.app \
            -ov -format UDZO \
            SnapFlow-macOS-Universal.dmg
      
      - name: Upload Universal app
        uses: actions/upload-artifact@v3
        with:
          name: macos-universal
          path: |
            PhotoUploader.app
            SnapFlow-macOS-Universal.dmg

  # ═══════════════════════════════════════════════════════════
  # CREATE RELEASE (when tagged)
  # ═══════════════════════════════════════════════════════════
  
  create-release:
    name: Create Release
    needs: [build-windows, create-macos-universal]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download Windows build
        uses: actions/download-artifact@v3
        with:
          name: windows-build
          path: release
      
      - name: Download macOS Universal
        uses: actions/download-artifact@v3
        with:
          name: macos-universal
          path: release
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/PhotoUploader.exe
            release/SnapFlow-macOS-Universal.dmg
          body: |
            ## SnapFlow Uploader - ${{ github.ref_name }}
            
            Professional photo & video uploader for photographers.
            
            ### 📥 Downloads:
            
            **Windows:**
            - `PhotoUploader.exe` - Windows 10/11 (64-bit)
            
            **macOS:**
            - `SnapFlow-macOS-Universal.dmg` - Universal Binary
              - ✅ Intel Macs (x86_64)
              - ✅ Apple Silicon (M1/M2/M3)
              - ✅ macOS 10.13 or later
            
            ### 🚀 Installation:
            
            **Windows:**
            1. Download `PhotoUploader.exe`
            2. Double-click to run
            3. Windows Defender may show warning - click "More info" → "Run anyway"
            
            **macOS:**
            1. Download `SnapFlow-macOS-Universal.dmg`
            2. Open the DMG
            3. Drag SnapFlow to Applications
            4. Right-click app → "Open" (first time only)
            
            ### ✨ Features:
            - Parallel uploads (4 concurrent)
            - Site validation via Make.com
            - Support for Daytime/Twilight/Video content
            - Professional UI with progress tracking
            - Auto-market detection
            
            ### 📋 Requirements:
            - **Windows:** Windows 10 or later
            - **macOS:** macOS 10.13 (High Sierra) or later
            - Internet connection
            - Photographer ID from admin
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}