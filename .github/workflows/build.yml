name: Build Cross-Platform Application

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # ---------------- WINDOWS BUILD ----------------
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build Windows executable
        run: pyinstaller --onefile --windowed --noconfirm --name PhotoUploader src/main.py
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: PhotoUploader-Windows
          path: dist/PhotoUploader.exe

  # ---------------- LINUX BUILD ----------------
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build Linux executable
        run: pyinstaller --onefile --windowed --noconfirm --name PhotoUploader src/main.py
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: PhotoUploader-Linux
          path: dist/PhotoUploader

  # ---------------- macOS BUILD (Intel x86_64) ----------------
  build-macos-x86_64:
    runs-on: macos-13 # Use an Intel-based runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python for x86_64
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build macOS app for x86_64
        run: |
          pyinstaller --windowed --noconfirm --name PhotoUploader src/main.py
          echo "Verifying architecture..."
          # This check will fail the job if the binary is not for x86_64
          lipo -info dist/PhotoUploader.app/Contents/MacOS/PhotoUploader | grep "x86_64"
      - name: Upload macOS x86_64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: PhotoUploader-x86_64
          path: dist/PhotoUploader.app

  # ---------------- macOS BUILD (Apple Silicon arm64) ----------------
  build-macos-arm64:
    runs-on: macos-14 # Use an ARM-based (Apple Silicon) runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python for arm64
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'arm64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build macOS app for arm64
        run: |
          pyinstaller --windowed --noconfirm --name PhotoUploader src/main.py
          echo "Verifying architecture..."
          # This check will fail the job if the binary is not for arm64
          lipo -info dist/PhotoUploader.app/Contents/MacOS/PhotoUploader | grep "arm64"
      - name: Upload macOS arm64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: PhotoUploader-arm64
          path: dist/PhotoUploader.app

  # ---------------- MERGE MACOS BUILDS INTO UNIVERSAL APP ----------------
  merge-macos-universal:
    # This job runs after both macOS builds are successful
    needs: [build-macos-x86_64, build-macos-arm64]
    runs-on: macos-latest # The merge can happen on any macOS runner
    steps:
      - name: Download ARM build
        uses: actions/download-artifact@v4
        with:
          name: PhotoUploader-arm64
          path: arm64-build

      - name: Download Intel build
        uses: actions/download-artifact@v4
        with:
          name: PhotoUploader-x86_64
          path: x86_64-build
      
      - name: Merge Intel + ARM into universal app
        run: |
          # Exit immediately if a command exits with a non-zero status.
          set -e

          echo "--- Verifying downloaded ARM artifact ---"
          ls -R arm64-build
          lipo -info "arm64-build/PhotoUploader.app/Contents/MacOS/PhotoUploader"
          
          echo "--- Verifying downloaded Intel artifact ---"
          ls -R x86_64-build
          lipo -info "x86_64-build/PhotoUploader.app/Contents/MacOS/PhotoUploader"

          echo "--- Creating universal app structure ---"
          cp -R "arm64-build/PhotoUploader.app" "dist/PhotoUploader.app"

          echo "--- Creating universal binary with lipo ---"
          lipo -create \
            "arm64-build/PhotoUploader.app/Contents/MacOS/PhotoUploader" \
            "x86_64-build/PhotoUploader.app/Contents/MacOS/PhotoUploader" \
            -output "dist/PhotoUploader.app/Contents/MacOS/PhotoUploader"

          echo "--- Verifying the final universal binary ---"
          echo "Lipo Info:"
          lipo -info "dist/PhotoUploader.app/Contents/MacOS/PhotoUploader"
          
          # Explicitly check for both architectures. Grep will exit with an error if not found.
          lipo -info "dist/PhotoUploader.app/Contents/MacOS/PhotoUploader" | grep "x86_64"
          lipo -info "dist/PhotoUploader.app/Contents/MacOS/PhotoUploader" | grep "arm64"
          echo "Universal binary successfully verified."
          
          echo "--- Zipping the universal app ---"
          # Zip from the workspace root to avoid 'cd'
          zip -ry "dist/PhotoUploader-macOS-Universal.zip" "dist/PhotoUploader.app"
          echo "Zipping complete."

      - name: Upload Universal macOS app
        uses: actions/upload-artifact@v4
        with:
          name: PhotoUploader-macOS-Universal
          path: dist/PhotoUploader-macOS-Universal.zip
