name: Build Cross-Platform Application

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # ---------------- WINDOWS BUILD ----------------
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build Windows executable
        run: pyinstaller --onefile --windowed --noconfirm --name PhotoUploader src/main.py
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: PhotoUploader-Windows
          path: dist/PhotoUploader.exe

  # ---------------- LINUX BUILD ----------------
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build Linux executable
        run: pyinstaller --onefile --windowed --noconfirm --name PhotoUploader src/main.py
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: PhotoUploader-Linux
          path: dist/PhotoUploader

  # ---------------- macOS BUILD (Intel x86_64) ----------------
  build-macos-intel:
    runs-on: macos-13 # Intel-based runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python for x86_64
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      
      - name: Build macOS app for Intel
        run: |
          pyinstaller --windowed --noconfirm \
            --name PhotoUploader \
            --osx-bundle-identifier com.yourcompany.photouploader \
            --target-arch x86_64 \
            src/main.py
          
          echo "--- Verifying architecture ---"
          lipo -info dist/PhotoUploader.app/Contents/MacOS/PhotoUploader
          file dist/PhotoUploader.app/Contents/MacOS/PhotoUploader
          
          echo "--- Setting permissions ---"
          chmod +x dist/PhotoUploader.app/Contents/MacOS/PhotoUploader
          
          echo "--- Ad-hoc signing ---"
          codesign --force --deep --sign - dist/PhotoUploader.app
          codesign --verify --verbose dist/PhotoUploader.app
          
          echo "--- Removing quarantine attributes ---"
          xattr -cr dist/PhotoUploader.app
      
      - name: Create DMG for Intel
        run: |
          cd dist
          hdiutil create -volname "PhotoUploader Intel" \
            -srcfolder PhotoUploader.app \
            -ov -format UDZO \
            PhotoUploader-macOS-Intel.dmg
      
      - name: Upload Intel macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: PhotoUploader-macOS-Intel
          path: dist/PhotoUploader-macOS-Intel.dmg

  # ---------------- macOS BUILD (Apple Silicon ARM64) ----------------
  build-macos-apple-silicon:
    runs-on: macos-14 # ARM-based (Apple Silicon) runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python for arm64
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'arm64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      
      - name: Build macOS app for Apple Silicon
        run: |
          pyinstaller --windowed --noconfirm \
            --name PhotoUploader \
            --osx-bundle-identifier com.yourcompany.photouploader \
            --target-arch arm64 \
            src/main.py
          
          echo "--- Verifying architecture ---"
          lipo -info dist/PhotoUploader.app/Contents/MacOS/PhotoUploader
          file dist/PhotoUploader.app/Contents/MacOS/PhotoUploader
          
          echo "--- Setting permissions ---"
          chmod +x dist/PhotoUploader.app/Contents/MacOS/PhotoUploader
          
          echo "--- Ad-hoc signing ---"
          codesign --force --deep --sign - dist/PhotoUploader.app
          codesign --verify --verbose dist/PhotoUploader.app
          
          echo "--- Removing quarantine attributes ---"
          xattr -cr dist/PhotoUploader.app
      
      - name: Create DMG for Apple Silicon
        run: |
          cd dist
          hdiutil create -volname "PhotoUploader Apple Silicon" \
            -srcfolder PhotoUploader.app \
            -ov -format UDZO \
            PhotoUploader-macOS-AppleSilicon.dmg
      
      - name: Upload Apple Silicon macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: PhotoUploader-macOS-AppleSilicon
          path: dist/PhotoUploader-macOS-AppleSilicon.dmg